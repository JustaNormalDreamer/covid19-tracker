{"version":3,"sources":["components/Cards/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.scss","components/Chart/Chart.module.scss","components/CountryPicker/CountryPicker.module.scss","images/image.png"],"names":["Item","props","styles","name","Grid","item","component","Card","xs","md","className","CardContent","Typography","color","gutterBottom","variant","start","end","data","duration","separator","Date","date","toDateString","Cards","confirmed","recovered","deaths","lastUpdate","cardItems","value","container","spacing","justify","map","index","key","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","dailyData","total","reportDate","fetchCountries","countries","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Country","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","document","this","image","src","coronaImg","alt","Chart","Component","rootElement","getElementById","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.48aabaf6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport \"./Cards.scss\";\n\nexport default function Item(props) {\n  let styles = `card ${props.name}`;\n  return (\n    <Grid item component={Card} xs={12} md={3} className={styles}>\n      <CardContent>\n        <Typography color=\"textPrimary\" gutterBottom>\n          {props.name}\n        </Typography>\n        <Typography variant=\"h5\">\n          <CountUp start={0} end={props.data} duration={2.5} separator=\",\" />\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {new Date(props.date).toDateString()}\n        </Typography>\n        <Typography variant=\"body2\">\n          Number of {props.name} cases of COVID-19\n        </Typography>\n      </CardContent>\n    </Grid>\n  );\n}\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"./Cards.scss\";\r\nimport Item from \"./Card\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  const cardItems = [\r\n    {\r\n      name: \"Infected\",\r\n      value: confirmed.value\r\n    },\r\n    {\r\n      name: \"Recovered\",\r\n      value: recovered.value\r\n    },\r\n    {\r\n      name: \"Deaths\",\r\n      value: deaths.value\r\n    },\r\n    {\r\n      name: \"Active\",\r\n      value: confirmed.value - recovered.value - deaths.value\r\n    },\r\n    {\r\n      name: \"Closed\",\r\n      value: recovered.value + deaths.value\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={\"container\"}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {cardItems.map((item, index) => (\r\n          <Item\r\n            key={index}\r\n            data={item.value}\r\n            name={item.name}\r\n            date={lastUpdate}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async country => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate }\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate\r\n    };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      recovered: dailyData.recovered.total,\r\n      date: dailyData.reportDate\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries }\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.scss\";\r\n\r\nconst Charts = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ recovered }) => recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            fill: true\r\n          }\r\n        ]\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\"\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` }\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.scss\";\r\n\r\nconst Country = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={e => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, index) => (\r\n          <option key={index} value={country.name}>\r\n            {country.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React, { Component } from \"react\";\nimport { Cards, Charts, Country } from \"./components\";\nimport styles from \"./App.module.scss\";\nimport { fetchData } from \"./api\";\nimport coronaImg from \"./images/image.png\";\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    //setting the title\n    document.title = \"COVID-19 Tracker\";\n    const fetchedData = await fetchData();\n\n    this.setState({\n      data: fetchedData\n    });\n  }\n\n  handleCountryChange = async country => {\n    const fetchedData = await fetchData(country);\n    this.setState({\n      data: fetchedData,\n      country: country\n    });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImg} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <Country handleCountryChange={this.handleCountryChange} />\n        <Charts data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\",\"image\":\"App_image__idSIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3SDj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__VD6N8\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}